---

- name: Finder - Set new window target ({{ finder.new_window_target }}).
  osx_defaults:
    domain: com.apple.finder
    key: NewWindowTarget
    type: string
    value: "{{ finder.new_window_target }}"
  notify: Restart Finder

- name: Finder - Show extension warning ({{ finder.show_file_extensions_warning }}).
  osx_defaults:
    domain: com.apple.finder
    key: FXEnableExtensionChangeWarning
    type: bool
    value: "{{ finder.show_file_extensions_warning | bool }}"
  notify: Restart Finder

- name: Finder - Warn before emptying the trash ({{ finder.warn_before_emptying_the_trash }}).
  osx_defaults:
    domain: com.apple.finder
    key: WarnOnEmptyTrash
    type: bool
    value: "{{ finder.warn_before_emptying_the_trash | bool }}"
  notify: Restart Finder

- name: Finder - Show All Files ({{ finder.show_all_files }})
  osx_defaults:
    domain: com.apple.finder
    key: AppleShowAllFiles
    type: bool
    value: "{{ finder.show_all_files | bool }}"
  notify: Restart Finder

- name: Finder - Keep folders on top when sorting by name ({{ finder.keep_folders_on_top }}).
  osx_defaults:
    domain: com.apple.finder
    key: _FXSortFoldersFirst
    type: bool
    value: "{{ finder.keep_folders_on_top | bool }}"
  notify: Restart Finder

- name: Finder - Show full path in finder titlebar ({{ finder.show_full_path_in_titlebar }}).
  osx_defaults:
    domain: com.apple.finder
    key: _FXShowPosixPathInTitle
    type: bool
    value: "{{ finder.show_full_path_in_titlebar | bool }}"
  notify: Restart Finder

- name: Finder - Show pathbar in bottom of finder ({{ finder.show_pathbar }}).
  osx_defaults:
    domain: com.apple.finder
    key: ShowPathbar
    type: bool
    value: "{{ finder.show_pathbar | bool }}"
  notify: Restart Finder

- name: Finder - Show statusbar ({{ finder.show_statusbar }}).
  osx_defaults:
    domain: com.apple.finder
    key: ShowStatusBar
    type: bool
    value: "{{ finder.show_statusbar | bool }}"
  notify: Restart Finder

- name: Finder - When performing a search, search the current folder by default.
  osx_defaults:
    domain: com.apple.finder
    key: FXDefaultSearchScope
    type: string
    value: "SCcf"
  notify: Restart Finder

- name: Finder - Enable quit menu item ({{ finder.enable_quit_menu_item }}).
  osx_defaults:
    domain: com.apple.finder
    key: QuitMenuItem
    type: bool
    value: "{{ finder.enable_quit_menu_item | bool }}"
  notify: Restart Finder

- name: Finder - Default view style ({{ finder.default_view_style }}).
  osx_defaults:
    domain: com.apple.finder
    key: FXPreferredViewStyle
    type: string
    value: "{{ finder.default_view_style }}"
  notify: Restart Finder

- name: Finder - Show external harddrives on desktop ({{ finder.show_external_harddrives_on_desktop }}).
  osx_defaults:
    domain: com.apple.finder
    key: ShowExternalHardDrivesOnDesktop
    type: bool
    value: "{{ finder.show_external_harddrives_on_desktop | bool }}"
  notify: Restart Finder

- name: Finder - Show harddrives on desktop ({{ finder.show_harddrives_on_desktop }}).
  osx_defaults:
    domain: com.apple.finder
    key: ShowHardDrivesOnDesktop
    type: bool
    value: "{{ finder.show_harddrives_on_desktop | bool }}"
  notify: Restart Finder

- name: Finder - Show mounted servers on desktop ({{ finder.show_mounted_servers_on_desktop }}).
  osx_defaults:
    domain: com.apple.finder
    key: ShowMountedServersOnDesktop
    type: bool
    value: "{{ finder.show_mounted_servers_on_desktop | bool }}"
  notify: Restart Finder

- name: Finder - Show removable media on desktop ({{ finder.show_removable_media_on_desktop }}).
  osx_defaults:
    domain: com.apple.finder
    key: ShowRemovableMediaOnDesktop
    type: bool
    value: "{{ finder.show_removable_media_on_desktop | bool }}"
  notify: Restart Finder

- name: Finder - Get user library folder status.
  shell: ls -aOl ~/Library/ | sed -n 2p
  register: user_library_folder_status
  changed_when: false

- name: Finder - Hide user library folder ({{ finder.hide_user_library }}). 
  command: "chflags {{ 'hidden' if finder.hide_user_library else 'nohidden' }} ~/Library/"
  notify: Restart Finder
  when: user_library_folder_status.stdout.find("hidden") == -1 and finder.hide_user_library or user_library_folder_status.stdout.find("hidden") != -1 and not finder.hide_user_library

- name: Finder - Get system volumes folder status.
  shell: ls -aOl /Volumes | sed -n 2p
  register: system_volumes_folder_status
  changed_when: false

- name: Finder - Hide system volumes folder ({{ finder.hide_system_volumes }}).
  command: "chflags {{ 'hidden' if finder.hide_system_volumes else 'nohidden' }} /Volumes"
  become: true
  notify: Restart Finder
  when: system_volumes_folder_status.stdout.find("hidden") == -1 and finder.hide_system_volumes or system_volumes_folder_status.stdout.find("hidden") != -1 and not finder.hide_system_volumes

# @TODO 
# Replace this shit as soon as ansible supports osx_defaults with dicts

- name: Finder - Get iconview show item info status.
  command: /usr/libexec/PlistBuddy -c "Print :{{ item }}" ~/Library/Preferences/com.apple.finder.plist
  with_items:
    - "DesktopViewSettings:IconViewSettings:showItemInfo"
    - "StandardViewSettings:IconViewSettings:showItemInfo"
  register: finder_iconview_show_item_info_status
  changed_when: false

- name: Finder - Show item info near icons on the desktop and in other icon views ({{ finder.iconview_show_item_info }}).
  command: /usr/libexec/PlistBuddy -c "Set :{{ item.1.name }} {{ item.1.value }}" ~/Library/Preferences/com.apple.finder.plist
  with_indexed_items:
    - { name: "DesktopViewSettings:IconViewSettings:showItemInfo", value: "{{ finder.iconview_show_item_info | bool | string() | lower }}" }
    - { name: "StandardViewSettings:IconViewSettings:showItemInfo", value: "{{ finder.iconview_show_item_info | bool | string() | lower }}" }
  notify: Restart Finder
  when: finder_iconview_show_item_info_status.results[item.0].stdout != item.1.value

# @TODO 
# Replace this shit as soon as ansible supports osx_defaults with dicts

- name: Finder - Get iconview show label on bottom status.
  command: /usr/libexec/PlistBuddy -c "Print DesktopViewSettings:IconViewSettings:labelOnBottom" ~/Library/Preferences/com.apple.finder.plist
  register: finder_iconview_show_label_on_bottom_status
  changed_when: false

- name: Finder - Show item info label on the bottom of the icons on the desktop ({{ finder.iconview_show_label_on_bottom }}).
  command: /usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom {{ finder.iconview_show_label_on_bottom|bool }}" ~/Library/Preferences/com.apple.finder.plist
  notify: Restart Finder
  when: finder_iconview_show_label_on_bottom_status.stdout == "false" and finder.iconview_show_label_on_bottom or finder_iconview_show_label_on_bottom_status.stdout == "true" and not finder.iconview_show_label_on_bottom

# @TODO 
# Replace this shit as soon as ansible supports osx_defaults with dicts

- name: Finder - Set default expansion of file info panes (Read settings).
  command: /usr/libexec/PlistBuddy -c "Print :FXInfoPanesExpanded:{{ item.name }}" ~/Library/Preferences/com.apple.finder.plist
  with_items: "{{ finder.expand_infopane }}"
  register: finder_expand_fileinfo_status
  changed_when: false
  failed_when: false

- name: Finder - Set default expansion of file info panes (Create settings).
  command: defaults write com.apple.finder FXInfoPanesExpanded -dict-add {{ item.1.name }} -bool {{ item.1.value }}
  with_indexed_items: "{{ finder.expand_infopane }}"
  when: finder_expand_fileinfo_status.results[item.0].stderr != ""

- name: Finder - Set default expansion of file info panes (Create vars).
  set_fact:
    tmp_item:
      name: "{{ item.name }}"
      value: "{{ item.value | bool | string() | lower }}"
  register: tmp_items
  with_items: "{{ finder.expand_infopane }}"
- name: Finder - Set default expansion of file info panes (Create vars).
  set_fact:
    finder_expand_infopane_parsed: "{{ tmp_items.results | map(attribute='ansible_facts.tmp_item') | list }}"

- name: Finder - Set default expansion of file info panes (Update settings).
  command: /usr/libexec/PlistBuddy -c "Set :FXInfoPanesExpanded:{{ item.1.name }} {{ item.1.value }}" ~/Library/Preferences/com.apple.finder.plist
  with_indexed_items: "{{ finder.expand_infopane }}"
  notify: Restart Finder
  when: finder_expand_fileinfo_status.results[item.0].stdout != finder_expand_infopane_parsed[item.0].value and finder_expand_fileinfo_status.results[item.0].stderr == ""


- name: Finder - Enable QuickLook text selection ({{ finder.enable_quicklook_text_selection }}).
  osx_defaults:
    domain: com.apple.finder
    key: QLEnableTextSelection
    type: bool
    value: "{{ finder.enable_quicklook_text_selection | bool }}"
  notify: Restart Finder

- name: Finder - Disable window and get info animations ({{ finder.disable_all_animations }}).
  osx_defaults:
    domain: com.apple.finder
    key: DisableAllAnimations
    type: bool
    value: "{{ finder.disable_all_animations | bool }}"
  notify: Restart Finder

# @TODO 
# Replace this shit as soon as ansible supports osx_defaults with dicts

- name: Finder - Get iconview arrange by status.
  command: /usr/libexec/PlistBuddy -c "Print :{{ item }}" ~/Library/Preferences/com.apple.finder.plist
  with_items:
    - "DesktopViewSettings:IconViewSettings:arrangeBy"
    - "StandardViewSettings:IconViewSettings:arrangeBy"
  register: finder_iconview_arrange_by_status
  changed_when: false

- name: Finder - Set iconview arrange by ({{ finder.iconview_arrange_by }}).
  command: /usr/libexec/PlistBuddy -c "Set :{{ item.1.name }} {{ item.1.value }}" ~/Library/Preferences/com.apple.finder.plist
  with_indexed_items:
    - { name: "DesktopViewSettings:IconViewSettings:arrangeBy", value: "{{ finder.iconview_arrange_by }}" }
    - { name: "StandardViewSettings:IconViewSettings:arrangeBy", value: "{{ finder.iconview_arrange_by }}" }
  notify: Restart Finder
  when: finder_iconview_arrange_by_status.results[item.0].stdout != item.1.value

# @TODO 
# Replace this shit as soon as ansible supports osx_defaults with dicts

- name: Finder - Get iconview grid spacing value.
  command: /usr/libexec/PlistBuddy -c "Print :{{ item }}" ~/Library/Preferences/com.apple.finder.plist
  with_items:
    - "DesktopViewSettings:IconViewSettings:gridSpacing"
    - "StandardViewSettings:IconViewSettings:gridSpacing"
  register: finder_iconview_grid_spacing_value
  changed_when: false

- name: Finder - Set grid spacing for icons on the desktop and in other icon views ({{ finder.iconview_grid_spacing }}).
  command: /usr/libexec/PlistBuddy -c "Set :{{ item.1.name }} {{ item.1.value }}" ~/Library/Preferences/com.apple.finder.plist
  with_indexed_items:
    - { name: "DesktopViewSettings:IconViewSettings:gridSpacing", value: "{{ \"%.6f\" | format(finder.iconview_grid_spacing|float) }}" }
    - { name: "StandardViewSettings:IconViewSettings:gridSpacing", value: "{{ \"%.6f\" | format(finder.iconview_grid_spacing|float) }}" }
  notify: Restart Finder
  when: finder_iconview_grid_spacing_value.results[item.0].stdout != item.1.value

# @TODO 
# Replace this shit as soon as ansible supports osx_defaults with dicts

- name: Finder - Get iconview icon size value.
  command: /usr/libexec/PlistBuddy -c "Print :{{ item }}" ~/Library/Preferences/com.apple.finder.plist
  with_items:
    - "DesktopViewSettings:IconViewSettings:iconSize"
    - "StandardViewSettings:IconViewSettings:iconSize"
  register: finder_iconview_icon_size_value
  changed_when: false

- name: Finder - Set iconview icon size value ({{ finder.iconview_icon_size }}).
  command: /usr/libexec/PlistBuddy -c "Set :{{ item.1.name }} {{ item.1.value }}" ~/Library/Preferences/com.apple.finder.plist
  with_indexed_items:
    - { name: "DesktopViewSettings:IconViewSettings:iconSize", value: "{{ \"%.6f\" | format(finder.iconview_icon_size|float) }}" }
    - { name: "StandardViewSettings:IconViewSettings:iconSize", value: "{{ \"%.6f\" | format(finder.iconview_icon_size|float) }}" }
  notify: Restart Finder
  when: finder_iconview_icon_size_value.results[item.0].stdout != item.1.value

# @TODO 
# Replace this shit as soon as ansible supports osx_defaults with dicts

- name: Finder - Get iconview text size value.
  command: /usr/libexec/PlistBuddy -c "Print :{{ item }}" ~/Library/Preferences/com.apple.finder.plist
  with_items:
    - "DesktopViewSettings:IconViewSettings:textSize"
    - "StandardViewSettings:IconViewSettings:textSize"
  register: finder_iconview_text_size_value
  changed_when: false

- name: Finder - Set iconview text size value ({{ finder.iconview_text_size }}).
  command: /usr/libexec/PlistBuddy -c "Set :{{ item.1.name }} {{ item.1.value }}" ~/Library/Preferences/com.apple.finder.plist
  with_indexed_items:
    - { name: "DesktopViewSettings:IconViewSettings:textSize", value: "{{ \"%.6f\" | format(finder.iconview_text_size|float) }}" }
    - { name: "StandardViewSettings:IconViewSettings:textSize", value: "{{ \"%.6f\" | format(finder.iconview_text_size|float) }}" }
  notify: Restart Finder
  when: finder_iconview_text_size_value.results[item.0].stdout != item.1.value

# @TODO 
# Replace this shit as soon as ansible supports osx_defaults with dicts

- name: Finder - Show preview in iconsviews (Read settings).
  command: /usr/libexec/PlistBuddy -c "Print :{{ item }}" ~/Library/Preferences/com.apple.finder.plist
  with_items:
    - "DesktopViewSettings:IconViewSettings:showIconPreview"
    - "StandardViewSettings:IconViewSettings:showIconPreview"
  register: finder_iconview_show_icon_preview_value
  changed_when: false

- name: Finder - Show preview in iconsviews (Create vars).
  set_fact:
    spii_tmp_item: "{{ item.stdout | bool }}"
  with_items: "{{ finder_iconview_show_icon_preview_value.results }}"
  register: spii_tmp_items
  no_log: true

- name: Finder - Show preview in iconsviews (Create vars).
  set_fact:
    finder_iconview_show_icon_preview_value_parsed: "{{ spii_tmp_items.results | map(attribute='ansible_facts.spii_tmp_item') | list }}"

- name: Finder - Show preview in iconsviews ({{ finder.iconview_show_icon_preview }}).
  command: /usr/libexec/PlistBuddy -c "Set :{{ item.1.name }} {{ item.1.value }}" ~/Library/Preferences/com.apple.finder.plist
  with_indexed_items:
    - { name: "DesktopViewSettings:IconViewSettings:showIconPreview", value: "{{ finder.iconview_show_icon_preview | bool }}" }
    - { name: "StandardViewSettings:IconViewSettings:showIconPreview", value: "{{ finder.iconview_show_icon_preview | bool }}" }
  notify: Restart Finder
  when: finder_iconview_show_icon_preview_value_parsed[item.0] != item.1.value

# @TODO 
# Show Drives and Servers in Sidebar
#/usr/bin/defaults write com.apple.sidebarlists systemitems -dict-add ShowEjectables -bool true
#/usr/bin/defaults write com.apple.sidebarlists systemitems -dict-add ShowHardDisks  -bool true
#/usr/bin/defaults write com.apple.sidebarlists systemitems -dict-add ShowRemovable  -bool true
#/usr/bin/defaults write com.apple.sidebarlists systemitems -dict-add ShowServers    -bool true
